# This is a basic workflow to help you get started with Actions

name: airspeed-velocity

env:
  CONDA_ENV_PATH: /home/runner/env
  TEST_DATA_PATH: /home/runner/data
  IRIS_TEST_DATA_REF: 2.0.0  


# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ asv-actions-wflow ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: test git
        run: |
          git checkout ${{ github.sha }}
          
      - name: Cache conda
        uses: actions/cache@v2.1.4
        id: cache-conda
        with:
          path: |
            ${{ env.CONDA_ENV_PATH }}
            ~/.asv/env
          key: iris-${{ runner.os }}-${{ hashFiles('requirements/ci/py*.yml') }}-0

      - name: Cache iris test data
        uses: actions/cache@v2.1.4
        id: cache-iris-test-data
        with:
          path: ${{ env.TEST_DATA_PATH }}
          key: iris-${{ runner.os }}-${{ env.IRIS_TEST_DATA_REF }}

      - name: Get iris test data
        if: steps.cache-iris-test-data.outputs.cache-hit != 'true'
        run: |
          wget --quiet https://github.com/SciTools/iris-test-data/archive/v${IRIS_TEST_DATA_REF}.zip -O iris-test-data.zip
          unzip -q iris-test-data.zip
          mv iris-test-data-$(echo "${IRIS_TEST_DATA_REF}" | sed "s/^v//") $TEST_DATA_PATH

      # Runs a single command using the runners shell
      - name: create conda environment
        if: steps.cache-conda.outputs.cache-hit != 'true'
        run: |
          conda env create --quiet -p $CONDA_ENV_PATH --file=requirements/ci/py37.yml
          
      - name: install iris and asv
        run: |
          source $CONDA/bin/activate $CONDA_ENV_PATH
          pip install -e .
          pip install asv
          
      - name: Run airspeed velocity
        env:
          OVERRIDE_TEST_DATA_REPOSITORY: $${ TEST_DATA_PATH }}/test_data
        run: |
          source $CONDA/bin/activate $CONDA_ENV_PATH
          asv machine --yes --machine gh-runner
          asv run --machine gh-runner ${{ github.sha }}
          asv publish

      - name: Archive asv results
        uses: actions/upload-artifact@v2
        with:
          name: asv-report
          path: |
            .asv/html
            .asv/results

# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ asv-actions-wflow ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

#       - name: Cache
#         uses: actions/cache@v2.1.4
#         with:
#           # A list of files, directories, and wildcard patterns to cache and restore
#           path: /env
#           # An explicit key for restoring and saving the cache
#           key: ${{ runner.os }}-${{ hashFiles('requirements/ci/py*.yml') }}
# #           # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
# #           restore-keys: # optional
# #           # The chunk size used to split up large files during upload, in bytes
# #           upload-chunk-size: # optional

      # Runs a single command using the runners shell
      - name: create conda environment
        run: |
          cat >env.yml <<EOF
          name: blah
          dependencies:
            - python=3.7
          EOF
          conda env create --quiet -p /usr/env --file=env.yml
          conda activate /env
          
      - name: install iris
        run: |
          conda activate /usr/env
          pip install -e .
          
          
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          conda activate /usr/env
          pytest
